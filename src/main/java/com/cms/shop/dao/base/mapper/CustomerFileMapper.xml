<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cms.shop.dao.base.mapper.CustomerFileMapper" >
  <resultMap id="BaseResultMap" type="com.cms.shop.model.base.CustomerFile" >
    <id column="FILE_ID" property="fileId" jdbcType="INTEGER" />
    <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
    <result column="NEW_FILE_NAME" property="newFileName" jdbcType="VARCHAR" />
    <result column="FILE_TYPE" property="fileType" jdbcType="INTEGER" />
    <result column="customer_Id" property="customerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FILE_ID, FILE_NAME, NEW_FILE_NAME, FILE_TYPE, customer_Id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cms.shop.model.base.CustomerFileCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_file
    where FILE_ID = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_file
    where FILE_ID = #{fileId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cms.shop.model.base.CustomerFileCriteria" >
    delete from customer_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cms.shop.model.base.CustomerFile" >
    <selectKey resultType="java.lang.Integer" keyProperty="fileId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into customer_file (FILE_NAME, NEW_FILE_NAME, FILE_TYPE, 
      customer_Id)
    values (#{fileName,jdbcType=VARCHAR}, #{newFileName,jdbcType=VARCHAR}, #{fileType,jdbcType=INTEGER}, 
      #{customerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cms.shop.model.base.CustomerFile" >
    <selectKey resultType="java.lang.Integer" keyProperty="fileId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into customer_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        FILE_NAME,
      </if>
      <if test="newFileName != null" >
        NEW_FILE_NAME,
      </if>
      <if test="fileType != null" >
        FILE_TYPE,
      </if>
      <if test="customerId != null" >
        customer_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="newFileName != null" >
        #{newFileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cms.shop.model.base.CustomerFileCriteria" resultType="java.lang.Integer" >
    select count(*) from customer_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer_file
    <set >
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null" >
        FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.newFileName != null" >
        NEW_FILE_NAME = #{record.newFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null" >
        FILE_TYPE = #{record.fileType,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_Id = #{record.customerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer_file
    set FILE_ID = #{record.fileId,jdbcType=INTEGER},
      FILE_NAME = #{record.fileName,jdbcType=VARCHAR},
      NEW_FILE_NAME = #{record.newFileName,jdbcType=VARCHAR},
      FILE_TYPE = #{record.fileType,jdbcType=INTEGER},
      customer_Id = #{record.customerId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cms.shop.model.base.CustomerFile" >
    update customer_file
    <set >
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="newFileName != null" >
        NEW_FILE_NAME = #{newFileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        FILE_TYPE = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_Id = #{customerId,jdbcType=INTEGER},
      </if>
    </set>
    where FILE_ID = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cms.shop.model.base.CustomerFile" >
    update customer_file
    set FILE_NAME = #{fileName,jdbcType=VARCHAR},
      NEW_FILE_NAME = #{newFileName,jdbcType=VARCHAR},
      FILE_TYPE = #{fileType,jdbcType=INTEGER},
      customer_Id = #{customerId,jdbcType=INTEGER}
    where FILE_ID = #{fileId,jdbcType=INTEGER}
  </update>
</mapper>