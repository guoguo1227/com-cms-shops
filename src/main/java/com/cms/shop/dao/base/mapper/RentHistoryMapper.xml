<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cms.shop.dao.base.mapper.RentHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.cms.shop.model.base.RentHistory" >
    <id column="RENT_ID" property="rentId" jdbcType="INTEGER" />
    <result column="RENT_STATUS" property="rentStatus" jdbcType="INTEGER" />
    <result column="AUDIT_LEVEL" property="auditLevel" jdbcType="INTEGER" />
    <result column="APPLY_DATE" property="applyDate" jdbcType="TIMESTAMP" />
    <result column="reply_Date" property="replyDate" jdbcType="TIMESTAMP" />
    <result column="PRIORITY" property="priority" jdbcType="INTEGER" />
    <result column="shop_Id" property="shopId" jdbcType="INTEGER" />
    <result column="renter_Id" property="renterId" jdbcType="INTEGER" />
    <result column="info_Id" property="infoId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RENT_ID, RENT_STATUS, AUDIT_LEVEL, APPLY_DATE, reply_Date, PRIORITY, shop_Id, renter_Id, 
    info_Id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cms.shop.model.base.RentHistoryCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rent_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rent_history
    where RENT_ID = #{rentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rent_history
    where RENT_ID = #{rentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cms.shop.model.base.RentHistoryCriteria" >
    delete from rent_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cms.shop.model.base.RentHistory" >
    <selectKey resultType="java.lang.Integer" keyProperty="rentId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into rent_history (RENT_STATUS, AUDIT_LEVEL, APPLY_DATE, 
      reply_Date, PRIORITY, shop_Id, 
      renter_Id, info_Id)
    values (#{rentStatus,jdbcType=INTEGER}, #{auditLevel,jdbcType=INTEGER}, #{applyDate,jdbcType=TIMESTAMP}, 
      #{replyDate,jdbcType=TIMESTAMP}, #{priority,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, 
      #{renterId,jdbcType=INTEGER}, #{infoId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cms.shop.model.base.RentHistory" >
    <selectKey resultType="java.lang.Integer" keyProperty="rentId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into rent_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rentStatus != null" >
        RENT_STATUS,
      </if>
      <if test="auditLevel != null" >
        AUDIT_LEVEL,
      </if>
      <if test="applyDate != null" >
        APPLY_DATE,
      </if>
      <if test="replyDate != null" >
        reply_Date,
      </if>
      <if test="priority != null" >
        PRIORITY,
      </if>
      <if test="shopId != null" >
        shop_Id,
      </if>
      <if test="renterId != null" >
        renter_Id,
      </if>
      <if test="infoId != null" >
        info_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rentStatus != null" >
        #{rentStatus,jdbcType=INTEGER},
      </if>
      <if test="auditLevel != null" >
        #{auditLevel,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="replyDate != null" >
        #{replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="renterId != null" >
        #{renterId,jdbcType=INTEGER},
      </if>
      <if test="infoId != null" >
        #{infoId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cms.shop.model.base.RentHistoryCriteria" resultType="java.lang.Integer" >
    select count(*) from rent_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rent_history
    <set >
      <if test="record.rentId != null" >
        RENT_ID = #{record.rentId,jdbcType=INTEGER},
      </if>
      <if test="record.rentStatus != null" >
        RENT_STATUS = #{record.rentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.auditLevel != null" >
        AUDIT_LEVEL = #{record.auditLevel,jdbcType=INTEGER},
      </if>
      <if test="record.applyDate != null" >
        APPLY_DATE = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.replyDate != null" >
        reply_Date = #{record.replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.priority != null" >
        PRIORITY = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_Id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.renterId != null" >
        renter_Id = #{record.renterId,jdbcType=INTEGER},
      </if>
      <if test="record.infoId != null" >
        info_Id = #{record.infoId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rent_history
    set RENT_ID = #{record.rentId,jdbcType=INTEGER},
      RENT_STATUS = #{record.rentStatus,jdbcType=INTEGER},
      AUDIT_LEVEL = #{record.auditLevel,jdbcType=INTEGER},
      APPLY_DATE = #{record.applyDate,jdbcType=TIMESTAMP},
      reply_Date = #{record.replyDate,jdbcType=TIMESTAMP},
      PRIORITY = #{record.priority,jdbcType=INTEGER},
      shop_Id = #{record.shopId,jdbcType=INTEGER},
      renter_Id = #{record.renterId,jdbcType=INTEGER},
      info_Id = #{record.infoId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cms.shop.model.base.RentHistory" >
    update rent_history
    <set >
      <if test="rentStatus != null" >
        RENT_STATUS = #{rentStatus,jdbcType=INTEGER},
      </if>
      <if test="auditLevel != null" >
        AUDIT_LEVEL = #{auditLevel,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        APPLY_DATE = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="replyDate != null" >
        reply_Date = #{replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null" >
        PRIORITY = #{priority,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_Id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="renterId != null" >
        renter_Id = #{renterId,jdbcType=INTEGER},
      </if>
      <if test="infoId != null" >
        info_Id = #{infoId,jdbcType=INTEGER},
      </if>
    </set>
    where RENT_ID = #{rentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cms.shop.model.base.RentHistory" >
    update rent_history
    set RENT_STATUS = #{rentStatus,jdbcType=INTEGER},
      AUDIT_LEVEL = #{auditLevel,jdbcType=INTEGER},
      APPLY_DATE = #{applyDate,jdbcType=TIMESTAMP},
      reply_Date = #{replyDate,jdbcType=TIMESTAMP},
      PRIORITY = #{priority,jdbcType=INTEGER},
      shop_Id = #{shopId,jdbcType=INTEGER},
      renter_Id = #{renterId,jdbcType=INTEGER},
      info_Id = #{infoId,jdbcType=INTEGER}
    where RENT_ID = #{rentId,jdbcType=INTEGER}
  </update>
</mapper>