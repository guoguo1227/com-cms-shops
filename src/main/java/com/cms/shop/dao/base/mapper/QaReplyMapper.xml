<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cms.shop.dao.base.mapper.QaReplyMapper" >
  <resultMap id="BaseResultMap" type="com.cms.shop.model.base.QaReply" >
    <id column="REPLY_ID" property="replyId" jdbcType="INTEGER" />
    <result column="REPLY_CONTENT" property="replyContent" jdbcType="VARCHAR" />
    <result column="CREATER" property="creater" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    REPLY_ID, REPLY_CONTENT, CREATER, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cms.shop.model.base.QaReplyCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qa_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from qa_reply
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from qa_reply
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cms.shop.model.base.QaReplyCriteria" >
    delete from qa_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cms.shop.model.base.QaReply" >
    <selectKey resultType="java.lang.Integer" keyProperty="replyId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into qa_reply (REPLY_CONTENT, CREATER, CREATE_TIME
      )
    values (#{replyContent,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cms.shop.model.base.QaReply" >
    <selectKey resultType="java.lang.Integer" keyProperty="replyId" order="AFTER" >
      SELECT @@IDENTITY
    </selectKey>
    insert into qa_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="replyContent != null" >
        REPLY_CONTENT,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="replyContent != null" >
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cms.shop.model.base.QaReplyCriteria" resultType="java.lang.Integer" >
    select count(*) from qa_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update qa_reply
    <set >
      <if test="record.replyId != null" >
        REPLY_ID = #{record.replyId,jdbcType=INTEGER},
      </if>
      <if test="record.replyContent != null" >
        REPLY_CONTENT = #{record.replyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        CREATER = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update qa_reply
    set REPLY_ID = #{record.replyId,jdbcType=INTEGER},
      REPLY_CONTENT = #{record.replyContent,jdbcType=VARCHAR},
      CREATER = #{record.creater,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cms.shop.model.base.QaReply" >
    update qa_reply
    <set >
      <if test="replyContent != null" >
        REPLY_CONTENT = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cms.shop.model.base.QaReply" >
    update qa_reply
    set REPLY_CONTENT = #{replyContent,jdbcType=VARCHAR},
      CREATER = #{creater,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where REPLY_ID = #{replyId,jdbcType=INTEGER}
  </update>
</mapper>